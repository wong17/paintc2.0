<#@ template language="C#" inherits="BaseTemplate" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Shapes.C" #>
/* Code generated by Paintc */
#include <graphics.h>
#include <conio.h>

/* Dibuja <#= poly.Name #> */
void draw<#= poly.Name #>();

int main()
{
  int GraphDriver, GraphMode, ErrorCode;
  GraphDriver = DETECT; /* Request auto-detection	*/
  initgraph(&GraphDriver, &GraphMode, "");
  ErrorCode = graphresult(); /* Read result of initialization*/
  if (ErrorCode != grOk) /* Error occured during init	*/
  { 
    printf(" Graphics System Error: %s\n", grapherrormsg(ErrorCode));
	exit(1);
  }

  /* Establecer color de fondo */
  setbkcolor(<#= settings.BackgroundColor #>);

  /* Your code here... */
  draw<#= poly.Name #>();

  getch();
  closegraph(); /* Return the system to text mode	*/
  return 0;
}

void draw<#= poly.Name #>()
{
  /* Dibujar poligono */
  int n = <#= poly.Vertices.Count #>;
  int points[<#= poly.Vertices.Count * 2#>];

  int color = <#= poly.Fill #>;
  int fillPattern = <#= poly.FillPattern #>;

  /* Agregar coordenadas de vértices al arreglo */
<# 
for (int i = 0; i < poly.Vertices.Count * 2; i += 2) 
{ 
#>
  points[<#= i #>] = <#= poly.Vertices[i / 2].X #>;
  points[<#= i + 1 #>] = <#= poly.Vertices[i / 2].Y #>;
<#
} 
#>

  /* Establecer color de relleno */
  setfillstyle(fillPattern, color);
  /* Dibujar polígono usando el arreglo de puntos */
  fillpoly(n, points);
}

<#+ 
	public CPoly poly { get; set; }
	public CanvasSettings settings { get; set; }
#>