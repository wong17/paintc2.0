// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Paintc.Resources.RTT
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Shapes.C;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class CPolyTemplate : BaseTemplate
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("/* Code generated by Paintc */\r\n#include <graphics.h>\r\n#include <conio.h>\r\n\r\n/* D" +
                    "ibuja ");
            
            #line 11 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(poly.Name));
            
            #line default
            #line hidden
            this.Write(" */\r\nvoid draw_");
            
            #line 12 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(poly.Name));
            
            #line default
            #line hidden
            this.Write(@"();

int main()
{
  int GraphDriver, GraphMode, ErrorCode;
  GraphDriver = DETECT; /* Request auto-detection	*/
  initgraph(&GraphDriver, &GraphMode, """");
  ErrorCode = graphresult(); /* Read result of initialization*/
  if (ErrorCode != grOk) /* Error occured during init	*/
  { 
    printf("" Graphics System Error: %s\n"", grapherrormsg(ErrorCode));
	exit(1);
  }

  /* Establecer color de fondo */
  setbkcolor(");
            
            #line 27 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(settings.BackgroundColor));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n  /* Your code here... */\r\n  draw_");
            
            #line 30 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(poly.Name));
            
            #line default
            #line hidden
            this.Write("();\r\n\r\n  getch();\r\n  closegraph(); /* Return the system to text mode\t*/\r\n  return" +
                    " 0;\r\n}\r\n\r\nvoid draw_");
            
            #line 37 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(poly.Name));
            
            #line default
            #line hidden
            this.Write("()\r\n{\r\n  /* Dibujar poligono */\r\n  int n = ");
            
            #line 40 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(poly.Vertices.Count));
            
            #line default
            #line hidden
            this.Write(";\r\n  int points[");
            
            #line 41 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(poly.Vertices.Count * 2));
            
            #line default
            #line hidden
            this.Write("];\r\n\r\n  int fill = ");
            
            #line 43 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(poly.Fill));
            
            #line default
            #line hidden
            this.Write(";\r\n  int stroke = ");
            
            #line 44 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(poly.Stroke));
            
            #line default
            #line hidden
            this.Write(";\r\n  int fillPattern = ");
            
            #line 45 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(poly.FillPattern));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\n  /* Agregar coordenadas de vértices al arreglo */\r\n");
            
            #line 48 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
 
for (int i = 0; i < poly.Vertices.Count * 2; i += 2) 
{ 

            
            #line default
            #line hidden
            this.Write("  points[");
            
            #line 52 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("] = ");
            
            #line 52 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(poly.Vertices[i / 2].X));
            
            #line default
            #line hidden
            this.Write(";\r\n  points[");
            
            #line 53 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i + 1));
            
            #line default
            #line hidden
            this.Write("] = ");
            
            #line 53 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(poly.Vertices[i / 2].Y));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 54 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"

} 

            
            #line default
            #line hidden
            this.Write("\r\n  /* Establecer color de relleno */\r\n  setfillstyle(fillPattern, fill);\r\n  /* E" +
                    "stablecer color de linea de borde */\r\n  setcolor(stroke);\r\n  /* Dibujar polígono" +
                    " usando el arreglo de puntos */\r\n  fillpoly(n, points);\r\n}\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 66 "D:\Repositories\paintc2.0\Paintc2.0\Paintc\Resources\RTT\CPolyTemplate.tt"
 
	public CPoly poly { get; set; }
	public CanvasSettings settings { get; set; }

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
